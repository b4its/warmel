/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Project.Pages.Produk;

import Project.Connection.Connections;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;


import javax.swing.JOptionPane;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import Project.Helper.CurrencyFormat;

/**
 *
 * @author brsap
 */
public class ProdukMenu extends javax.swing.JInternalFrame {

    /**
     * Creates new form 
     */
    public boolean dataBaru;
    public ProdukMenu() {
        
        initComponents();
        getKategori();
        getData();
        dataBaru = true;

     
    }
            private void getData()
    {
        CurrencyFormat formatIDCurrency = new CurrencyFormat();
        // menampilkan data dari database
        try (Connection conn = (Connection) Connections.ConnectionDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet sql = stm.executeQuery(
                    "SELECT p.namaProduk, k.namaKategori, p.hargaBeli, p.hargaJual, p.stok, p.created_at, p.updated_at " +
            "FROM produk p " +
            "INNER JOIN kategori k ON p.idKategori = k.idKategori"
            ))
        {

            
            // Membuat model tabel untuk menampilkan data
            DefaultTableModel model = new DefaultTableModel();

            // Menambahkan kolom baru untuk 'no'
            model.addColumn("No");
            model.addColumn("Nama Produk");
            model.addColumn("Kategori");
            model.addColumn("Harga Beli");
            model.addColumn("Harga Jual");
            model.addColumn("Stok");
            model.addColumn("Created");
            model.addColumn("Updated At");

            // Menambahkan data ke dalam model
            int no = 1;  // Variabel untuk nomor urut
            
            while (sql.next()) {
                
                model.addRow(new Object[] {
                    
                    no++, // Menambahkan nomor urut
                    sql.getString("namaProduk"), // Menambahkan nama kategori
                    sql.getString("namaKategori"),   // Menambahkan created_at
                    formatIDCurrency.formatCurrency(sql.getDouble("hargaBeli")), // Menambahkan nama kategori
                    formatIDCurrency.formatCurrency(sql.getDouble("hargaJual")),   // Menambahkan created_at
                    sql.getString("stok"), // Menambahkan nama kategori
                    sql.getString("created_at"),   // Menambahkan created_at
                    sql.getString("updated_at")    // Menambahkan updated_at
                });
            }

            // Menampilkan model ke dalam tabel
            produkTable.setModel(model);
            
        }
        catch (SQLException | HeadlessException e) 
        {
        }
    }

    
    
            private void getKategori()
    {
        // menampilkan data dari database
        try 
        {
            Connection conn = (Connection) Connections.ConnectionDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet queryKategori = stm.executeQuery("select namaKategori from kategori");
            cbKategori.removeAllItems();
            cbKategori.addItem("silahkan pilih kategori..");
            // Menambahkan data ke dalam model
            while (queryKategori.next()) {
                String namaKategori = queryKategori.getString("namaKategori");
                cbKategori.addItem(namaKategori);
            }
            
            // Tambahkan listener
            cbKategori.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (cbKategori.getSelectedIndex() == 0) {
                        // Kalau user pilih "Pilih data...", kembalikan ke sebelumnya
                        JOptionPane.showMessageDialog(null, "Silakan pilih item yang valid!");
                        cbKategori.setSelectedIndex(1); // Reset pilihan
                    }
                }
            });
            
            
            

            
        }
        catch (SQLException | HeadlessException e) 
        {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textNama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textHBeli = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textHJual = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        spinStok = new javax.swing.JSpinner();
        cbKategori = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        produkTable = new javax.swing.JTable();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        txtIdProduk = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Daftar Produk");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Nama Produk");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Kategori");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Harga Beli");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Harga Jual");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Stok");

        cbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Bersihkan");

        btnSubmit.setText("Tambahkan/Update");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jButton3.setText("Hapus");

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        produkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(produkTable);

        txtCari.setText("cari produk..");

        btnCari.setText("Cari");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCari))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnKembali)
                                    .addComponent(btnSubmit)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textNama)
                                    .addComponent(textHBeli, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(textHJual, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(spinStok)
                                    .addComponent(cbKategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtIdProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(textHBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(textHJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(spinStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(btnSubmit))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(btnKembali))
                        .addGap(18, 18, 18)
                        .addComponent(txtIdProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
      String inputHBeli = textHBeli.getText();
        String inputHJual = textHJual.getText();

        Connection conn = null;
        java.sql.PreparedStatement pst = null;

        try {
            // Membuka koneksi database
            conn = Connections.ConnectionDB();

            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Koneksi ke database gagal.");
                return;
            }

            // Verifikasi bahwa koneksi berhasil sebelum menyiapkan query
            String sql = "";
            if (dataBaru) { // proses simpan atau edit
                sql = "INSERT INTO produk (namaProduk, idKategori, hargaBeli, hargaJual, stok, created_at, updated_at) "
                        + "VALUES (?, ?, ?, ?, ?, NOW(), NOW())";

                // Inisialisasi PreparedStatement
                pst = conn.prepareStatement(sql);
                pst.setString(1, textNama.getText()); // Menggunakan parameter untuk menghindari SQL injection
                pst.setInt(2, Integer.parseInt(cbKategori.getSelectedItem().toString())); // idKategori as Integer
                pst.setDouble(3, Double.parseDouble(inputHBeli));
                pst.setDouble(4, Double.parseDouble(inputHJual));
                pst.setInt(5, (int) spinStok.getValue());
            } else {
                sql = "UPDATE produk SET namaProduk=?, updated_at=NOW() WHERE idProduk=?";

                // Inisialisasi PreparedStatement
                pst = conn.prepareStatement(sql);
                pst.setString(1, textNama.getText()); // Menggunakan parameter untuk menghindari SQL injection
                pst.setInt(2, Integer.parseInt(txtIdProduk.getText()));
            }

            // Mengeksekusi query
            if (pst != null) {
                pst.execute();
                JOptionPane.showMessageDialog(null, dataBaru ? "Produk telah berhasil disimpan" : "Kategori telah berhasil diperbarui");
            } else {
                JOptionPane.showMessageDialog(null, "PreparedStatement gagal dibuat.");
            }

            getData();
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace(); // Log untuk debugging
        } 




        
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbKategori;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable produkTable;
    private javax.swing.JSpinner spinStok;
    private javax.swing.JTextField textHBeli;
    private javax.swing.JTextField textHJual;
    private javax.swing.JTextField textNama;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdProduk;
    // End of variables declaration//GEN-END:variables
}
